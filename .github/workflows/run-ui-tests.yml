# 1. Nome do Workflow
name: CI Completa - Build, API Tests e UI Tests

# 2. Gatilho (Trigger)
on:
  push:
    branches: [ "main" ]

# 3. Tarefas (Jobs)
jobs:
  build-and-run-all-tests:
    runs-on: ubuntu-latest

    # 4. Serviços (O Banco de Dados)
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Password@123
          POSTGRES_DB: api_estoque_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # 5. Passos (Steps)
    steps:
      # --- FASE 1: BUILD DA API (PROJETO 1) ---

      - name: 1. Checkout API Project (Projeto 1)
        uses: actions/checkout@v4
        with:
          path: api-estoque # Baixa para a pasta 'api-estoque'

      - name: 2. Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 3. Build and Unit Test API (Projeto 1)
        run: mvn -B clean install
        working-directory: ./api-estoque # Define o diretório de trabalho

      - name: 4. Run API in Background
        run: java -jar target/*.jar &
        working-directory: ./api-estoque # Roda a partir da pasta da API

      - name: 5. Wait for API to be healthy
        run: |
          echo "Waiting for API..."
          sleep 20 # Espera o Spring Boot iniciar
          curl --retry 10 --retry-delay 5 --retry-connrefused \
               -v http://localhost:8080/api/products
          echo "API (Projeto 1) is up and healthy!"

      # --- FASE 2: TESTES DE API (PROJETO 2) ---

      - name: 6. Checkout E2E API Test Project (Projeto 2)
        uses: actions/checkout@v4
        with:
          repository: lucas-ribeiro-silva/api-estoque-tests
          path: e2e-api-tests # Baixa para a pasta 'e2e-api-tests'

      - name: 7. Run E2E API Tests (RestAssured)
        run: |
          # Dá permissão de execução (A CORREÇÃO)
          chmod +x mvnw
          # Roda os testes de lógica
          ./mvnw test -Dtest=OrderLogicTests
        working-directory: ./e2e-api-tests # Roda a partir da pasta de testes

      # --- FASE 3: TESTES DE UI (PROJETO 3) ---

      - name: 8. Checkout E2E UI Test Project (Projeto 3)
        uses: actions/checkout@v4
        with:
          repository: lucas-ribeiro-silva/web-automation-tests
          path: e2e-ui-tests # Baixa para a pasta 'e2e-ui-tests'

      - name: 9. Run E2E UI Tests (Selenium)
        run: |
          # Dá permissão de execução (A CORREÇÃO)
          chmod +x mvnw
          # Roda o teste de UI com o Chrome em modo "headless" (sem tela)
          ./mvnw test
        working-directory: ./e2e-ui-tests # Roda a partir da pasta de testes